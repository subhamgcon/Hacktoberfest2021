#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;
 
#define int long long
#define INF 1e9
#define endl "\n"
#define pi 2*acos(0.0)//M_PI in cmath lib
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define L length()
 // std::vector<std::vector<int>> dp(n+1,std::vector<int>(m+1));
const int N=200003;
 
int gcd(int a, int b){
    if(b==0)return a;
    return gcd(b, a%b);
}
 
std::vector<int> seive(int n){
    std::vector<int> v(n+1,0);
    std::vector<int> p;
    for(int i=2;i*i<=n;i++){
        if(v[i]==0){
            p.pb(i);
            for(int j=i;j<=n;j+=i)v[i]=1;
        }
    }
    return p;
}
 
bool cmp(pair<pair<int,int>,int> a, pair<pair<int,int>,int> b){
    return a.F.F<b.F.F;
}
 
int fn(int n){
    return n^(n>>1);
}
vector<vector<int>>ans;
void towerOfHanoi(int n, int f, int a, int d){
    if(n==1){
        ans.push_back({f,d});
        return;
    }
    towerOfHanoi(n-1,f,d,a);
    ans.push_back({f,d});
    towerOfHanoi(n-1,a,f,d);
}
 
void solve(){
    int n;cin>>n;
    towerOfHanoi(n, 1, 2, 3);
    cout<<ans.size()<<endl;
    for(auto it:ans)cout<<it[0]<<" "<<it[1]<<endl;
}
 
signed main(){
    ios_base::sync_with_stdio(false);cin.tie(NULL); 
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r" , stdin);
    freopen("output.txt", "w", stdout);
    #endif
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
}
